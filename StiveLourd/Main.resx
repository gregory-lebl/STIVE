<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>